/**
 * This file defines the Schema for the user model to save in the database. Note that the user ID key is automatically generated by MonbgoDB
 */

var mongoose = require('mongoose');
var post = require('./post_model.js');
mongoose.Promise = global.Promise;

var user = mongoose.model('user', { first_name: String,
    last_name: String,
    password: String,
    email: String,
    friend_list: [String]
    });
    
user.create_user = function(first, last, password, email){
    var new_user = new user({ first_name: first, last_name: last, password: password, email: email });
    
    new_user.save(function (err) {
      if (err) {
        console.log(err);
      } else {
          
        console.log('successfully created user with id: ' );
        
        var query = user.findOne({ last_name: last }); //define the mongoose query to search the collection
        
        query.exec(function (err, person) { // actually execute the query
            if (err) return handleError(err);
                console.log(person._id) // log the _id of the found object in the console in order to verify that something was actually found
            })
      }
    });
}

user.create_post = function(title, body){
    var creator_id = self._id;
    post.create_post(creator_id, title, body);
}

user.create_friendship = function(this_user_id, new_friend_id){
    user.findByIdAndUpdate(
        this_user_id,
        {$push: {"friend_list": new_friend_id}},
        {safe: true, upsert: true},
        function(err, model) {
            console.log(err);
        }
    );
        user.findByIdAndUpdate(
        new_friend_id,
        {$push: {"friend_list": this_user_id}},
        {safe: true, upsert: true},
        function(err, model) {
            console.log(err);
        }
    );
}



module.exports = user;